Responsive Website mittels GRID
===============================

In dieser Aufgabe wollen wir eine komplette Webseite mit Hilfe eines Grid-Systems erstellen.
Zus√§tzlich soll sie repsonsive sein, d.h. mit dem Wechsel der Viewportgr√∂√üe soll die Darstellung in einer anderen Form erfolgen.

Ausgangspunkt ist folgende HTML-Datei:

.. tabbed:: grid_example_1

    .. tab:: Ausgabe

        .. activecode:: resp_webseite_1
            :language: html
            :enabledownload:


            <!DOCTYPE html>
            <html lang="en">

            <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <link rel="stylesheet" href="../assets/style.css">
            <link rel="stylesheet" href="./responsive-START.css">
            <title>Responsive Website!</title>
            </head>

            <body>

            <div class="wrapper">
                <div class="top">
                <header class="hero">
                    <h1>Terry's Taco Joint</h1>
                    <p>Pretty Good Tacos!</p>
                </header>
                <div class="cta cta1">
                    <p class="price">$1.99</p>
                    <p>Tacos</p>
                </div>
                <div class="cta cta2">
                    <p class="price">$3.99</p>
                    <p>Kombucha</p>
                </div>

                </div>
                <nav class="menu">
                <button aria-expanded="false" aria-controls="menu-list">
                    <span class="open">‚ò∞</span>
                    <span class="close">√ó</span>
                    Menu
                </button>
                <ul id="menu-list">
                    <li>
                    <a href="">Tacos</a>
                    </li>
                    <li>
                    <a href="">Beers</a>
                    </li>
                    <li>
                    <a href="">Wines</a>
                    </li>
                    <li>
                    <a href="">Desserts</a>
                    </li>
                    <li>
                    <a href="">Reservations</a>
                    </li>
                </ul>
                </nav>

                <section class="features">
                <div class="feature">
                    <span class="icon">üåÆ</span>
                    <h3>Tacos</h3>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Animi, assumenda.</p>
                </div>
                <div class="feature">
                    <span class="icon">üç∫</span>
                    <h3>Beer</h3>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Animi, assumenda.</p>
                </div>
                <div class="feature">
                    <span class="icon">üç∑</span>
                    <h3>Wine</h3>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Animi, assumenda.</p>
                </div>
                <div class="feature">
                    <span class="icon">üéµ</span>
                    <h3>Music</h3>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Animi, assumenda.</p>
                </div>
                </section>

                <section class="about">
                <img src="images/queso-taco.png" alt="Yummy Taco" class="about__mockup">
                <div class="about__details">
                    <h2>Featured Taco</h2>
                    <p>Slim Profile, easy to hold and loaded with cheese.</p>
                    <p>This is the one you have been waiting for</p>
                    <button>Learn More ‚Üí</button>
                </div>
                </section>


                <section class="gallery">
                <h2>Instant Grams</h2>
                <img src="https://source.unsplash.com/random/201x201" alt="">
                <img src="https://source.unsplash.com/random/202x202" alt="">
                <img src="https://source.unsplash.com/random/203x203" alt="">
                <img src="https://source.unsplash.com/random/204x204" alt="">
                <img src="https://source.unsplash.com/random/205x205" alt="">
                <img src="https://source.unsplash.com/random/206x206" alt="">
                <img src="https://source.unsplash.com/random/207x207" alt="">
                <img src="https://source.unsplash.com/random/207x208" alt="">
                <img src="https://source.unsplash.com/random/207x209" alt="">
                <img src="https://source.unsplash.com/random/207x210" alt="">
                </section>
            </div>

            <script>
            </script>

            </body>

            </html>

    .. tab:: Optik_Large

        .. image:: media/taco/taco_full.png



    .. tab:: Optik_Medium

        .. image:: media/taco/taco_medium.png


    .. tab:: Optik_Small

        .. image:: media/taco/taco_small.png


..  sidebar:: Aufgabe

    Die einzelnen Bereiche der Webseite herausarneiten


Top-Bereich
-----------

Zur Gestaltung wird ein Grid-Display mit named-columns verwendet. Die Klasse .top erh√§lt folgende Definition:

.. code-block:: css

    .top {

        display: grid;
        grid-template-areas:
            "hero hero cta1"
            "hero hereo cta2"
    }

Im Browser wird das Grid wie folgt aufgespannt:

.. image:: media/taco/top_areas.png


Zur besseren optischen Darstellung m√ºssen die Klassen der HTML-Datei noch den Bereichen zugeordnet werden.

.. code-block:: css

    .hero{
        grid-area: hero;
    }

    .cta1{

        grid-area: cta1;
    }

    .cta2{
        grid-area: cta2;
    }

Das Browserfenster wird folgende Darstellung anzeigen:

.. image:: media/taco/top_areas_2.png

Die hero-Klasse wird anschlie√üend noch wie folgt gestylt:

.. code-block:: css

    .hero{
        grid-area: hero;
        min-heigth: 400px;
        background: white url(images/taco.jpg);
        background-size: cover;
        background-position: bottom right;
        padding: 50px;
    }


Der Text im Hero-Bereich wird mit Hilfe von Flexbox gestylt.
Die Elemente werden mit folgender Anweisung ausgew√§hlt und gestylt:

.. code-block:: css

    .hero > * {

        background: var(--yellow);
        padding: 5px;
    }


.. sidebar:: Aufgabe

    Hier noch den Flex-Einsatz kl√§ren

Die hero-Klasse erh√§lt noch folgende Zusatzanweisungen.

.. code-block:: css

    .hero{
        display: flex;
        flex-direction: column;
        align-items: start
        justify-content: center;
    }

Im Ergebnis haben wir dann folgende Darstellung im Browser:

.. image:: media/taco/top_areas_3.png

.. Minute: 6.23

